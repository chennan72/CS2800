(defdata file (list String nat)



Every output from ACL2 will be capitalized, a -> A

(test? (implies hyp conclusion))
(test? (implies (and R1 R2 ...))
hyp => concl


(test? (implies (natp n)(equal (even-natp n)(even-intp n)))

(acl2s-defaults :set testing-enabled nil)
(set-defunc-termination-strictp nil)
(set-defunc-termination-contract-strictp nil)
(set-defunc-body-contracts-strictp nil)


(test? (implies (listp l) (same-same-multiplicity l l l))


enum is for specific data




---------------------------------------------------------------------------------
Jan 30 Monday

Example (test? (implies (and (rationalp r) (>= r 1)) (<= r (* r r)))

XOR one or another, not both(nil/t) 

implies helps protect test the code from bad data



new symbol for this Logic course

(A * B) + C = (A and B) or C
(A + B) * C = AC + BC


<> = XOR

PEMDAS ()
NOT
AND OR
= XOR
APPLY(双线箭头右）



(defunc positions (x l)
  :input-contract (listp n)
  :output-contract (listp (positions x l))
  (if (endp l)
      nil
      (if (equal x (first l))
          (cons 0 (inc-all 1 (positions x (rest l)))
          (cons (inc-all 1 (positions x (rest l))])))
          
          
          
          
Proove Lemma          
          




